/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package javaapplication7;

import com.sun.jdi.connect.spi.Connection;
import static java.lang.ProcessBuilder.Redirect.to;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.Connection;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author 91799
 */
public class Uploadnotice extends javax.swing.JInternalFrame {

    /**
     * Creates new form Uploadnotice
     */
    public Uploadnotice() {
        initComponents();
       this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        entertext = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        entertext.setColumns(20);
        entertext.setRows(5);
        jScrollPane1.setViewportView(entertext);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 46, 660, 183));

        jLabel1.setText("Enter the notice ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 135, -1));

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setText("submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 150, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String text = entertext.getText();
        userLogino(text);
        sendSMSToAll(text);
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea entertext;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

     private void sendSMSToAll(String text) {
         var dbconn = DBConnection.connectDB();

        if (dbconn != null) {
            try {
                // Retrieve all phone numbers from your database
                String query = "SELECT s_phonenumber FROM mysql.signup"; // Adapt table name
                PreparedStatement st = dbconn.prepareStatement(query);
                ResultSet resultSet = st.executeQuery();

                // Create a list to store phone numbers
                ArrayList<String> phoneNumbers = new ArrayList<>();

                while (resultSet.next()) {
                    phoneNumbers.add(resultSet.getString("s_phonenumber"));
                }

                // Send SMS to each recipient
                for (String phoneNumber : phoneNumbers) {
                    // Send SMS using the BulkSMS API
                    API api = new API();
                    api.sms("pratik9113", "APratik@8383", phoneNumber, text);
                }

                JOptionPane.showMessageDialog(this, "SMS sent to all recipients!");

            } catch (SQLException ex) {
                Logger.getLogger(Uploadnotice.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("The database connection is not available.");
        }
    }

    
    private void userLogino(String text) {
         var dbconn = DBConnection.connectDB();
    
    if (dbconn != null) {
        try {
            // Define the SQL query with placeholders for email and password
            String query = "insert into mysql.admindashboard(notice_text) values (?)";
            PreparedStatement st = dbconn.prepareStatement(query);
             st.setString(1, text);
 int rowsAffected = st.executeUpdate();

            if (rowsAffected > 0) {
                // Insertion successful
                dispose();
               // 1. dipose
             /*  //2. changes 
                 API api = new API();
                    api.sms("pratik9113", "APratik@8383", s_phonenumber, text);

                    JOptionPane.showMessageDialog(this, "Notice added and SMS sent successfully!");
                // You can perform other actions here if needed*/
            } else {
                JOptionPane.showMessageDialog(this, "Insertion failed", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(student_signup.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        System.out.println("The connection is not available.");
    }
}
        }
